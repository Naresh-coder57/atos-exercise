[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\NARESH\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\NARESH\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 15.0.2)
[debug]       Load.loadUnit: plugins took 203.0678ms
[debug]       Load.loadUnit: defsScala took 0.3418ms
[debug] [Loading] Scanning directory C:\Users\NARESH\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\NARESH\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 22.1432 ms
[debug]           Load.resolveProject(global-plugins) took 61.1947ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\NARESH\.sbt\1.0\plugins, plugins: List(<none>))) took 111.021601ms
[debug] [Loading] Done in C:\Users\NARESH\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 145.822001ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3511ms
[debug]     Load.loadUnit(file:/C:/Users/NARESH/.sbt/1.0/plugins/, ...) took 362.9794ms
[debug]   Load.apply: load took 582.541ms
[debug]   Load.apply: resolveProjects took 6.898101ms
[debug]   Load.apply: finalTransforms took 103.8744ms
[debug]   Load.apply: config.delegates took 11.0181ms
[debug]   Load.apply: Def.make(settings)... took 639.347799ms
[debug]   Load.apply: structureIndex took 148.9533ms
[debug]   Load.apply: mkStreams took 1.959801ms
[info] loading global plugins from C:\Users\NARESH\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3192.577399ms
[debug]           Load.loadUnit: plugins took 39.8914ms
[debug]           Load.loadUnit: defsScala took 0.006101ms
[debug] [Loading] Scanning directory C:\Users\NARESH\IdeaProjects\CI-CD pipeline\practice\ShoppingCart\project
[debug]             Load.loadUnit: mkEval took 7.7715ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\NARESH\IdeaProjects\CI-CD pipeline\practice\ShoppingCart\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.7266 ms
[info] loading settings for project shoppingcart-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(shoppingcart-build) took 4.251499ms
[debug]             Load.loadTransitive: finalizeProject(Project(id shoppingcart-build, base: C:\Users\NARESH\IdeaProjects\CI-CD pipeline\practice\ShoppingCart\project, plugins: List(<none>))) took 9.9459ms
[debug] [Loading] Done in C:\Users\NARESH\IdeaProjects\CI-CD pipeline\practice\ShoppingCart\project, returning: (shoppingcart-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3597.613601ms
[debug]           Load.loadUnit: cleanEvalClasses took 12.770801ms
[debug]         Load.loadUnit(file:/C:/Users/NARESH/IdeaProjects/CI-CD%20pipeline/practice/ShoppingCart/project/, ...) took 3651.797501ms
[debug]       Load.apply: load took 3655.7111ms
[debug]       Load.apply: resolveProjects took 0.1851ms
[debug]       Load.apply: finalTransforms took 13.303999ms
[debug]       Load.apply: config.delegates took 0.975399ms
[debug]       Load.apply: Def.make(settings)... took 131.6662ms
[debug]       Load.apply: structureIndex took 63.7979ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from C:\Users\NARESH\IdeaProjects\CI-CD pipeline\practice\ShoppingCart\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 5414.532601ms
[debug]     Load.loadUnit: defsScala took 0.003601ms
[debug] [Loading] Scanning directory C:\Users\NARESH\IdeaProjects\CI-CD pipeline\practice\ShoppingCart
[debug]       Load.loadUnit: mkEval took 0.341799ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtide.ConfigPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.806801 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 34.250201ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\NARESH\IdeaProjects\CI-CD pipeline\practice\ShoppingCart, plugins: List(<none>))) took 38.905ms
[debug] [Loading] Done in C:\Users\NARESH\IdeaProjects\CI-CD pipeline\practice\ShoppingCart, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2056.2912ms
[debug]     Load.loadUnit: cleanEvalClasses took 17.5229ms
[debug]   Load.loadUnit(file:/C:/Users/NARESH/IdeaProjects/CI-CD%20pipeline/practice/ShoppingCart/, ...) took 7489.5667ms
[debug] Load.apply: load took 7491.801199ms
[debug] Load.apply: resolveProjects took 0.661899ms
[debug] Load.apply: finalTransforms took 32.209901ms
[debug] Load.apply: config.delegates took 0.371599ms
[debug] Load.apply: Def.make(settings)... took 132.7094ms
[debug] Load.apply: structureIndex took 38.816ms
[debug] Load.apply: mkStreams took 0.0032ms
[info] set current project to ShoppingCart (in build file:/C:/Users/NARESH/IdeaProjects/CI-CD%20pipeline/practice/ShoppingCart/)
[warn] there's a key that's not used by any other settings/tasks:
[warn]  
[warn] * root / idePackagePrefix
[warn]   +- C:\Users\NARESH\IdeaProjects\CI-CD pipeline\practice\ShoppingCart\build.sbt:8
[warn]  
[warn] note: a setting might still be used by a command; to exclude a key from this `lintUnused` check
[warn] either append it to `Global / excludeLintKeys` or call .withRank(KeyRanks.Invisible) on the key
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51516 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51516, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to ShoppingCart (in build file:/C:/Users/NARESH/IdeaProjects/CI-CD%20pipeline/practice/ShoppingCart/)
[debug] > Exec(idea-shell, None, None)
